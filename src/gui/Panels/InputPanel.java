/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.Panels;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.JFrame;
import javax.swing.SpinnerNumberModel;

import Services.Constants;
import domain.BuildMode;
import gui.Coordinator;
import gui.ScreenEnum;

/**
 *
 * @author firattamur
 */

public class InputPanel extends GamePanel {

    /**
     * Creates new form LoginPanel
     */
    public InputPanel() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        loginImageField = new javax.swing.JLabel();
        playBtn = new javax.swing.JButton();
        
        SpinnerNumberModel simpleBrickModel = new SpinnerNumberModel(75, 75, maxBrickCount, 1);
        simpleBrickCount = new javax.swing.JSpinner(simpleBrickModel);
        
        lblSimple = new javax.swing.JLabel();
        lblHalfMetal = new javax.swing.JLabel();
        
		SpinnerNumberModel halfMetalBrickModel = new SpinnerNumberModel(10, 10, maxBrickCount, 1);
        halfMetalBrickCount = new javax.swing.JSpinner(halfMetalBrickModel);
        lblWrapper = new javax.swing.JLabel();
		
        SpinnerNumberModel wrapperBrickModel = new SpinnerNumberModel(10, 10, maxBrickCount, 1);
        wrapperBrickCount = new javax.swing.JSpinner(wrapperBrickModel);
        lblMine = new javax.swing.JLabel();
        
        SpinnerNumberModel mineBrickModel = new SpinnerNumberModel(5, 5, maxBrickCount, 1);
        mineBrickCount = new javax.swing.JSpinner(mineBrickModel);

        setBackground(new java.awt.Color(23, 56, 63));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        loginImageField.setIcon(new javax.swing.ImageIcon("Assets/Images/login-image.jpg")); // NOI18N

        playBtn.setBackground(new java.awt.Color(146, 229, 192));
        playBtn.setFont(new java.awt.Font("Phosphate", 0, 18)); // NOI18N
        playBtn.setForeground(new java.awt.Color(23, 56, 63));
        playBtn.setText("Play");
       
        simpleBrickCount.setFont(new java.awt.Font("Phosphate", 0, 18)); // NOI18N

        lblSimple.setFont(new java.awt.Font("Phosphate", 0, 24)); // NOI18N
        lblSimple.setForeground(new java.awt.Color(146, 229, 192));
        lblSimple.setText("Simple Brick: ");

        lblHalfMetal.setFont(new java.awt.Font("Phosphate", 0, 24)); // NOI18N
        lblHalfMetal.setForeground(new java.awt.Color(146, 229, 192));
        lblHalfMetal.setText("Halfmetal brick: ");

        halfMetalBrickCount.setFont(new java.awt.Font("Phosphate", 0, 18)); // NOI18N

        lblWrapper.setFont(new java.awt.Font("Phosphate", 0, 24)); // NOI18N
        lblWrapper.setForeground(new java.awt.Color(146, 229, 192));
        lblWrapper.setText("Wrapper Brick:");

        wrapperBrickCount.setFont(new java.awt.Font("Phosphate", 0, 18)); // NOI18N

        lblMine.setFont(new java.awt.Font("Phosphate", 0, 24)); // NOI18N
        lblMine.setForeground(new java.awt.Color(146, 229, 192));
        lblMine.setText("Mine Brick: ");

        mineBrickCount.setFont(new java.awt.Font("Phosphate", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(loginImageField, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHalfMetal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblSimple, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(simpleBrickCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(halfMetalBrickCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblWrapper, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(wrapperBrickCount, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblMine, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mineBrickCount, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginImageField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpleBrickCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSimple))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(halfMetalBrickCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHalfMetal))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wrapperBrickCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWrapper))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mineBrickCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMine))
                .addGap(38, 38, 38)
                .addComponent(playBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
        );
    }// </editor-fold>                        

    
    // Variables declaration - do not modify                     
    private javax.swing.JSpinner halfMetalBrickCount;
    private javax.swing.JLabel lblHalfMetal;
    private javax.swing.JLabel lblMine;
    private javax.swing.JLabel lblSimple;
    private javax.swing.JLabel lblWrapper;
    private javax.swing.JLabel loginImageField;
    private javax.swing.JSpinner mineBrickCount;
    private javax.swing.JButton playBtn;
    private javax.swing.JSpinner simpleBrickCount;
    private javax.swing.JSpinner wrapperBrickCount;
    // End of variables declaration     
    private PanelListener listener = new PanelListener();
    private int maxBrickCount = Constants.BUILDMODE_GRID_ROWS * Constants.BUILDMODE_GRID_COLS / 4;

	
	@Override
    public void bindPanelListener(JFrame frame) {
		frame.addKeyListener(listener);
		frame.addMouseListener(listener);
		playBtn.addActionListener(listener);
	}
	@Override
    public void removePanelListener(JFrame frame) {
		frame.removeKeyListener(listener);
		frame.removeMouseListener(listener);
		playBtn.removeActionListener(listener);
	}


	private class PanelListener implements KeyListener, MouseListener, ActionListener{

		@Override
		public void keyTyped(KeyEvent e) {
		}

		@Override
		public void keyPressed(KeyEvent e) {

			if (e.getKeyCode() == KeyEvent.VK_ENTER) {
				okButtonPressed();
			}

		}

		@Override
		public void keyReleased(KeyEvent e) {

			

		}


		private void okButtonPressed() {

			// send the brick counts to the controller class in the domain to check counts.
			// if the counts are appropriate it will pass to the build mode else give an message to user.

			// return type of getValue is Object so it must be converted to int.
            if(Coordinator.getInstance().currentScreen != ScreenEnum.INPUT_DIALOGUE){
                return;
            }

			int simpleBrick = (int) simpleBrickCount.getValue();
			int halfMetalBrick = (int) halfMetalBrickCount.getValue();
			int wrapperBrick = (int) wrapperBrickCount.getValue();
			int mineBrick = (int) mineBrickCount.getValue();

			// sending the brick counts to BuildMode class.

			BuildMode.getInstance().getBrickCounts(simpleBrick, halfMetalBrick,
					wrapperBrick, mineBrick);

			Coordinator.getInstance().openScreen(ScreenEnum.BUILD);


		}

		@Override
		public void mouseClicked(MouseEvent e) {


        }

		@Override
		public void mousePressed(MouseEvent e) {
			if(e.getComponent().getName().equals("frame0"))
				e.getComponent().requestFocus();
			
		}

		@Override
		public void mouseReleased(MouseEvent e) {

        }

		@Override
		public void mouseEntered(MouseEvent e) {

        }

		@Override
		public void mouseExited(MouseEvent e) {

        }

		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			
			okButtonPressed();
			
		}
	}


}

